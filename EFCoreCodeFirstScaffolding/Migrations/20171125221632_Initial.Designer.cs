// <auto-generated />
using EFCoreCodeFirstScaffolding;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EFCoreCodeFirstScaffolding.Migrations
{
    [DbContext(typeof(EFCoreContext))]
    [Migration("20171125221632_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.Aircraft", b =>
                {
                    b.Property<int>("AircraftId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AircraftName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedLast")
                        .HasColumnType("DateTime");

                    b.HasKey("AircraftId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.AircraftFlightOrFlightPlan", b =>
                {
                    b.Property<int>("AircraftFlightOrFlightPlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AircraftId");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("DateTime");

                    b.Property<int?>("FlightId");

                    b.Property<int?>("FlightPlanId");

                    b.Property<int?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedLast")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReferencedTable");

                    b.HasKey("AircraftFlightOrFlightPlanId");

                    b.HasIndex("AircraftId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FlightId");

                    b.HasIndex("FlightPlanId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("AircraftFlightOrFlightPlan");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("DateTime");

                    b.Property<string>("FlightAlias")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedLast")
                        .HasColumnType("DateTime");

                    b.HasKey("FlightId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.FlightPlan", b =>
                {
                    b.Property<int>("FlightPlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FlightId");

                    b.Property<string>("FlightPlanName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("FlightPlanId");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightPlan");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserId");

                    b.ToTable("Users","Core");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.Aircraft", b =>
                {
                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.AircraftFlightOrFlightPlan", b =>
                {
                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.FlightPlan", "FlightPlan")
                        .WithMany()
                        .HasForeignKey("FlightPlanId");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.Flight", b =>
                {
                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Users", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("EFCoreCodeFirstScaffolding.Models.FlightPlan", b =>
                {
                    b.HasOne("EFCoreCodeFirstScaffolding.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
