//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsoleEF62
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EFCoreEntities : DbContext
    {
        public EFCoreEntities()
            : base("name=EFCoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Aircraft> Aircraft { get; set; }
        public virtual DbSet<AircraftFlightOrFlightPlan> AircraftFlightOrFlightPlans { get; set; }
        public virtual DbSet<Flight> Flights { get; set; }
        public virtual DbSet<FlightPlan> FlightPlans { get; set; }
        public virtual DbSet<vAircraftToFlightsAndFlightPlan> vAircraftToFlightsAndFlightPlans { get; set; }
    
        public virtual int pGetFlightOrFlightPlan(string referencedTable, Nullable<int> aircraftId, Nullable<int> flightOrFlightPlanId)
        {
            var referencedTableParameter = referencedTable != null ?
                new ObjectParameter("ReferencedTable", referencedTable) :
                new ObjectParameter("ReferencedTable", typeof(string));
    
            var aircraftIdParameter = aircraftId.HasValue ?
                new ObjectParameter("AircraftId", aircraftId) :
                new ObjectParameter("AircraftId", typeof(int));
    
            var flightOrFlightPlanIdParameter = flightOrFlightPlanId.HasValue ?
                new ObjectParameter("FlightOrFlightPlanId", flightOrFlightPlanId) :
                new ObjectParameter("FlightOrFlightPlanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pGetFlightOrFlightPlan", referencedTableParameter, aircraftIdParameter, flightOrFlightPlanIdParameter);
        }
    }
}
